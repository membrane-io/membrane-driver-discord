{
  "expressions": {
    "guild": {
      "description": "Guild",
      "type": "text",
      "searchIn": "https://discord.com",
      "regex": "data-list-item-id=\"guildsnav___([0-9]{18})+"
    },
    "channel": {
      "description": "Channel",
      "type": "url",
      "searchIn": "https://discord.com",
      "regex": "https://discord.com/channels/([0-9]{18})+/([0-9]{18})+"
    },
    "user": {
      "description": "User",
      "type": "text",
      "searchIn": "https://discord.com",
      "regex": "/avatars/[0-9]+"
    },
    "message": {
      "description": "Channel Message",
      "type": "text",
      "searchIn": "https://discord.com",
      "regex": "id=\"chat-messages-[0-9]+-[0-9]+"
    }
  },
  "schema": {
    "types": [
      {
        "name": "Root",
        "fields": [
          {
            "name": "guilds",
            "type": "GuildCollection",
            "description": ""
          },
          {
            "name": "me",
            "type": "User",
            "description": ""
          },
          {
            "name": "users",
            "type": "UserCollection",
            "description": ""
          },
          {
            "name": "parse",
            "type": "List",
            "hints": {
              "hidden": true
            },
            "ofType": {
              "type": "Ref",
              "ofType": "Guild"
            },
            "params": [
              {
                "name": "name",
                "type": "String"
              },
              {
                "name": "value",
                "type": "String"
              }
            ],
            "description": ""
          },
          {
            "name": "status",
            "type": "String",
            "description": ""
          },
          {
            "name": "tests",
            "type": "Tests",
            "description": ""
          }
        ],
        "actions": [
          {
            "name": "configure",
            "type": "Void",
            "params": [
              {
                "name": "clientId",
                "type": "String",
                "optional": true
              },
              {
                "name": "clientSecret",
                "type": "String",
                "optional": true
              },
              {
                "name": "publicKey",
                "type": "String",
                "optional": true
              },
              {
                "name": "token",
                "type": "String",
                "optional": true
              }
            ],
            "description": ""
          },
          {
            "name": "followUpWebhook",
            "type": "Void",
            "params": [
              {
                "name": "application_id",
                "type": "String"
              },
              {
                "name": "token",
                "type": "String"
              },
              {
                "name": "message",
                "type": "Json"
              }
            ],
            "description": ""
          }
        ],
        "description": ""
      },
      {
        "name": "MemberCollection",
        "fields": [
          {
            "name": "one",
            "type": "Member",
            "params": [
              {
                "name": "id",
                "type": "String"
              }
            ],
            "description": ""
          },
          {
            "name": "page",
            "type": "MemberPage",
            "params": [
              {
                "name": "limit",
                "type": "Int",
                "optional": true
              },
              {
                "name": "after",
                "type": "String",
                "optional": true
              }
            ],
            "description": ""
          }
        ],
        "description": ""
      },
      {
        "name": "MemberPage",
        "fields": [
          {
            "name": "items",
            "type": "List",
            "ofType": "Member",
            "description": "A list of Discord server members on the current page."
          },
          {
            "name": "next",
            "type": "Ref",
            "ofType": "MemberPage",
            "description": "A reference to the next page of Discord server members, if available."
          }
        ],
        "description": "Represents a pageable list of Discord server members."
      },
      {
        "name": "CommandCollection",
        "fields": [
          {
            "name": "one",
            "type": "Command",
            "params": [
              {
                "name": "id",
                "type": "String"
              }
            ],
            "description": ""
          },
          {
            "name": "items",
            "type": "List",
            "ofType": "Command",
            "description": ""
          }
        ],
        "description": ""
      },
      {
        "name": "UserCollection",
        "fields": [
          {
            "name": "one",
            "type": "User",
            "params": [
              {
                "name": "id",
                "type": "String"
              }
            ],
            "description": ""
          }
        ],
        "description": ""
      },
      {
        "name": "GuildCollection",
        "fields": [
          {
            "name": "one",
            "type": "Guild",
            "params": [
              {
                "name": "id",
                "type": "String"
              }
            ],
            "description": ""
          },
          {
            "name": "items",
            "type": "List",
            "ofType": "Guild",
            "description": ""
          }
        ],
        "description": ""
      },
      {
        "name": "Guild",
        "fields": [
          {
            "name": "id",
            "type": "String",
            "description": "The unique identifier of the guild."
          },
          {
            "name": "name",
            "type": "String",
            "hints": {
              "primary": true
            },
            "description": "The name of the guild."
          },
          {
            "name": "icon",
            "type": "String",
            "description": "The icon URL of the guild."
          },
          {
            "name": "owner",
            "type": "Boolean",
            "description": "Indicates if the current user is the owner of the guild."
          },
          {
            "name": "permissions",
            "type": "Int",
            "description": "The permission bit set for the guild."
          },
          {
            "name": "features",
            "type": "List",
            "ofType": "String",
            "description": "A list of features that are enabled for the guild."
          },
          {
            "name": "channels",
            "type": "ChannelCollection",
            "description": "A collection of channels associated with the guild."
          },
          {
            "name": "commands",
            "type": "CommandCollection",
            "description": "A collection of custom commands created for the guild."
          },
          {
            "name": "members",
            "type": "MemberCollection",
            "description": "A collection of members belonging to the guild."
          }
        ],
        "actions": [
          {
            "name": "createCommand",
            "type": "Void",
            "params": [
              {
                "name": "name",
                "type": "String",
                "description": "The name for the new command."
              },
              {
                "name": "description",
                "type": "String",
                "optional": true,
                "description": "A brief description of the new command."
              },
              {
                "name": "options",
                "description": "Additional options for the command in JSON format.",
                "type": "Json",
                "optional": true
              },
              {
                "name": "type",
                "type": "Int",
                "optional": true,
                "description": "The type of command to create, represented as an integer."
              }
            ],
            "description": "Creates a new command for the guild."
          }
        ],
        "events": [
          {
            "name": "onSlashCommand",
            "type": "SlashCommand",
            "description": "Triggered when a slash command is used within the guild."
          }
        ],
        "description": "Represents a Discord server (guild) with various properties and collections."
      },
      {
        "name": "ChannelCollection",
        "fields": [
          {
            "name": "one",
            "type": "Channel",
            "params": [
              {
                "name": "id",
                "type": "String"
              }
            ],
            "description": ""
          },
          {
            "name": "items",
            "type": "List",
            "ofType": "Channel",
            "description": ""
          }
        ],
        "description": ""
      },
      {
        "name": "MessageCollection",
        "fields": [
          {
            "name": "one",
            "type": "Message",
            "params": [
              {
                "name": "id",
                "type": "String",
                "description": "The unique identifier of the Discord message"
              }
            ],
            "description": "Retrieves a single message from the collection by ID"
          },
          {
            "name": "items",
            "type": "List",
            "ofType": "Message",
            "params": [
              {
                "name": "limit",
                "type": "Int",
                "optional": true,
                "description": "The maximum number of messages to retrieve (optional)"
              },
              {
                "name": "around",
                "type": "String",
                "optional": true,
                "description": "The ID of a message to center the list around (optional)"
              },
              {
                "name": "before",
                "type": "String",
                "optional": true,
                "description": "The ID of a message to limit the list to messages before it (optional)"
              },
              {
                "name": "after",
                "type": "String",
                "optional": true,
                "description": "The ID of a message to limit the list to messages after it (optional)"
              }
            ],
            "description": "Retrieves a list of messages from the collection with various filtering options"
          }
        ],
        "description": "Collection of Discord messages"
      },
      {
        "name": "Channel",
        "fields": [
          {
            "name": "id",
            "type": "String",
            "description": ""
          },
          {
            "name": "last_message_id",
            "type": "String",
            "description": ""
          },
          {
            "name": "rate_limit_per_user",
            "type": "Int",
            "description": ""
          },
          {
            "name": "name",
            "type": "String",
            "hints": {
              "primary": true
            },
            "description": ""
          },
          {
            "name": "type",
            "type": "Int",
            "description": ""
          },
          {
            "name": "position",
            "type": "Int",
            "description": ""
          },
          {
            "name": "flags",
            "type": "Int",
            "description": ""
          },
          {
            "name": "nsfw",
            "type": "Boolean",
            "description": ""
          },
          {
            "name": "parend_id",
            "type": "String",
            "description": ""
          },
          {
            "name": "topic",
            "type": "String",
            "description": ""
          },
          {
            "name": "guild_id",
            "type": "String",
            "description": ""
          },
          {
            "name": "permissions_overwrites",
            "type": "List",
            "ofType": "String",
            "description": ""
          },
          {
            "name": "messages",
            "type": "MessageCollection",
            "description": ""
          }
        ],
        "actions": [
          {
            "name": "sendMessage",
            "type": "Void",
            "params": [
              {
                "name": "content",
                "description": "",
                "type": "String"
              },
              {
                "name": "payload_json",
                "description": "",
                "type": "String",
                "optional": true
              },
              {
                "name": "tts",
                "type": "Boolean",
                "optional": true
              },
              {
                "name": "flags",
                "type": "Int",
                "optional": true
              },
              {
                "name": "sticker_ids",
                "description": "",
                "type": "String",
                "optional": true
              },
              {
                "name": "components",
                "description": "",
                "type": "String",
                "optional": true
              },
              {
                "name": "embeds",
                "description": "",
                "type": "String",
                "optional": true
              }
            ],
            "description": ""
          }
        ],
        "description": ""
      },
      {
        "name": "Message",
        "fields": [
          {
            "name": "id",
            "type": "String",
            "description": "Unique identifier for the message."
          },
          {
            "name": "type",
            "type": "Int",
            "description": "Type of the message indicating whether it's a default message, a recipient add, etc."
          },
          {
            "name": "content",
            "type": "String",
            "hints": {
              "primary": true
            },
            "description": "Text content of the message."
          },
          {
            "name": "channel_id",
            "type": "String",
            "description": "Identifier of the channel where the message was posted."
          },
          {
            "name": "pinned",
            "type": "Boolean",
            "description": "Indicates if the message is pinned in the channel."
          },
          {
            "name": "mention_everyone",
            "type": "Boolean",
            "description": "Indicates if the message mentions everyone in the channel."
          },
          {
            "name": "tts",
            "type": "Boolean",
            "description": "Indicates if text-to-speech is enabled for the message."
          },
          {
            "name": "timestamp",
            "type": "String",
            "description": "Timestamp of when the message was sent."
          },
          {
            "name": "edited_timestamp",
            "type": "String",
            "description": "Timestamp of when the message was last edited."
          },
          {
            "name": "flags",
            "type": "Int",
            "description": "Flags associated with the message for various features and states."
          },
          {
            "name": "author",
            "type": "User",
            "description": "User object representing the author of the message."
          },
          {
            "name": "attachments",
            "type": "Json",
            "ofType": "String",
            "description": "Attachments included with the message as a JSON string."
          },
          {
            "name": "embeds",
            "type": "Json",
            "ofType": "String",
            "description": "Embedded content such as images or videos included in the message as a JSON string."
          },
          {
            "name": "mentions",
            "type": "List",
            "ofType": "User",
            "description": "List of user objects representing the users mentioned in the message."
          },
          {
            "name": "mention_roles",
            "type": "Json",
            "ofType": "String",
            "description": "Roles mentioned in the message as a JSON string of IDs."
          },
          {
            "name": "reactions",
            "type": "List",
            "ofType": "Reaction",
            "description": "List of reactions added to the message."
          }
        ],
        "description": "Represents a message posted in a Discord channel."
      },
      {
        "name": "Member",
        "fields": [
          {
            "name": "user",
            "type": "User",
            "description": "The User object representing the member's Discord account."
          },
          {
            "name": "nick",
            "hints": {
              "primary": true
            },
            "type": "String",
            "description": "The member's nickname within the server."
          },
          {
            "name": "roles",
            "type": "List",
            "ofType": "String",
            "description": "List of role identifiers the member has been assigned."
          },
          {
            "name": "joined_at",
            "hints": {
              "primary": true
            },
            "type": "String",
            "description": "The timestamp when the member joined the server."
          },
          {
            "name": "premium_since",
            "type": "String",
            "description": "The timestamp when the member started boosting the server."
          },
          {
            "name": "deaf",
            "type": "Boolean",
            "description": "Indicates whether the member is server deafened."
          },
          {
            "name": "mute",
            "type": "Boolean",
            "description": "Indicates whether the member is server muted."
          },
          {
            "name": "pending",
            "type": "Boolean",
            "description": "Indicates if the member is pending verification in servers that have Membership Screening enabled."
          },
          {
            "name": "avatar",
            "type": "String",
            "description": "The URL of the member's server-specific avatar."
          },
          {
            "name": "flags",
            "type": "Int",
            "description": "An integer representing the member's user flags or permissions."
          }
        ],
        "description": "Represents a member of a Discord server with their details."
      },
      {
        "name": "User",
        "fields": [
          {
            "name": "id",
            "type": "String",
            "description": "The unique identifier for the Discord user."
          },
          {
            "name": "username",
            "type": "String",
            "hints": {
              "primary": true
            },
            "description": "The Discord user's handle, excluding the discriminator."
          },
          {
            "name": "display_name",
            "type": "String",
            "description": "The name displayed for the user within Discord."
          },
          {
            "name": "avatar",
            "type": "String",
            "description": "The URL of the user's avatar image."
          },
          {
            "name": "avatar_decoration",
            "type": "String",
            "description": "Decorative elements added to the user's avatar image."
          },
          {
            "name": "discriminator",
            "type": "String",
            "description": "The four-digit number used to uniquely identify users with the same username."
          },
          {
            "name": "public_flags",
            "type": "Int",
            "description": "Flags associated with the user denoting certain user achievements."
          },
          {
            "name": "bot",
            "type": "Boolean",
            "description": "Indicates whether the user is a bot account."
          }
        ],
        "description": "Represents a Discord user."
      },
      {
        "name": "Reaction",
        "fields": [
          {
            "name": "count",
            "type": "Int",
            "description": ""
          },
          {
            "name": "me",
            "type": "Boolean",
            "description": ""
          },
          {
            "name": "emoji",
            "type": "Emoji",
            "description": ""
          }
        ],
        "description": ""
      },
      {
        "name": "Command",
        "fields": [
          {
            "name": "name",
            "type": "String",
            "hints": {
              "primary": true
            },
            "description": ""
          },
          {
            "name": "description",
            "type": "String",
            "description": ""
          },
          {
            "name": "default_member_permissions",
            "type": "String",
            "description": ""
          },
          {
            "name": "default_permission",
            "type": "Boolean",
            "description": ""
          },
          {
            "name": "type",
            "type": "Int",
            "description": ""
          },
          {
            "name": "nsfw",
            "type": "Boolean",
            "description": ""
          },
          {
            "name": "options",
            "type": "List",
            "ofType": "String",
            "description": ""
          }
        ],
        "actions": [
          {
            "name": "delete",
            "type": "Void"
          }
        ],
        "description": ""
      },
      {
        "name": "Emoji",
        "fields": [
          {
            "name": "id",
            "type": "String",
            "description": "The unique identifier of the emoji."
          },
          {
            "name": "user",
            "type": "User",
            "description": "The user who created the emoji."
          },
          {
            "name": "name",
            "type": "String",
            "description": "The name of the emoji."
          },
          {
            "name": "animated",
            "type": "Boolean",
            "description": "Indicates whether the emoji is animated."
          },
          {
            "name": "available",
            "type": "Boolean",
            "description": "Indicates whether the emoji is available for use."
          },
          {
            "name": "require_colons",
            "type": "Boolean",
            "description": "Specifies if the emoji requires colons to be used in messages."
          },
          {
            "name": "managed",
            "type": "Boolean",
            "description": "Indicates if the emoji is managed by an integration or bot."
          },
          {
            "name": "roles",
            "type": "List",
            "ofType": "String",
            "description": "A list of role identifiers that can use this emoji."
          }
        ],
        "description": "Represents a custom emoji used in Discord messages."
      },
      {
        "name": "SlashCommand",
        "fields": [
          {
            "name": "user",
            "type": "User",
            "description": "The user who initiated the slash command."
          },
          {
            "name": "application_id",
            "type": "String",
            "description": "The unique identifier of the application that the slash command is registered to."
          },
          {
            "name": "token",
            "type": "String",
            "description": "A token used to validate the interaction and respond to the slash command."
          },
          {
            "name": "options",
            "type": "String",
            "description": "The arguments or parameters supplied by the user to the slash command."
          }
        ],
        "description": "Represents a discord slash command interaction."
      },
      {
        "name": "CommandOption",
        "fields": [
          {
            "name": "name",
            "type": "String",
            "description": "The name of the command option."
          },
          {
            "name": "type",
            "type": "String",
            "description": "The type of the command option, indicating the kind of value it holds."
          },
          {
            "name": "value",
            "type": "String",
            "description": "The value assigned to the command option, which depends on the type of option."
          }
        ],
        "description": "Defines an option for a Discord command, including its name, type, and value."
      },
      {
        "name": "Tests",
        "actions": [
          {
            "name": "testGetGuilds",
            "type": "Boolean",
            "description": ""
          },
          {
            "name": "ping",
            "type": "Boolean",
            "description": ""
          },
          {
            "name": "testGetUsers",
            "type": "Boolean",
            "description": ""
          },
          {
            "name": "testGetChannels",
            "type": "Boolean",
            "description": ""
          }
        ],
        "description": ""
      }
    ]
  },
  "dependencies": {
    "http": "http:",
    "endpoint": "sys-process:endpointUrl"
  }
}